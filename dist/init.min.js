export function init(t,e,n){e.init=init;const l=t.content.cloneNode(!0);if(e.template=l,e.transform){const t=l.firstElementChild;null!==t&&(e.leaf=t,process(e,0,0))}return n.appendChild(e.template),e}export function process(t,e,n){const l=t.leaf;if(void 0===l.matches)return;const r=t.transform;t.matchFirstChild=!1,t.matchNextSib=!1,t.drill=null;for(const i in r)if(l.matches(i)){(0,r[i])({target:l,ctx:t,idx:e,level:n})}const i=t.matchNextSib,o=t.matchFirstChild,s=t.drill;if(i){let r=t.transform;"object"==typeof i&&(t.transform=i);const o=l.nextElementSibling;null!==o&&(t.leaf=o,process(t,e+1,n)),t.transform=r}if(o||null!==s){let e,r=t.transform;if(null!==s){const n=Object.keys(s);e=l.querySelector(n[0]),t.transform=s}else e=l.firstElementChild,"object"==typeof o&&(t.transform=o);null!==e&&(t.leaf=e,process(t,0,n+1)),t.transform=r}t.matchFirstChild=o,t.matchNextSib=i}