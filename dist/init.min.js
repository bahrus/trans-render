export function init(t,e,n){e.init=init;const o=t.content.cloneNode(!0);if(e.template=o,e.transform){const t=o.firstElementChild;null!==t&&(e.leaf=t,process(e,0,0))}return n.appendChild(e.template),e}export function process(t,e,n){const o=t.leaf;if(void 0===o.matches)return;const r=t.transform;t.matchFirstChild=!1,t.matchNextSib=!1;for(const i in r)if(o.matches(i)){(0,r[i])({target:o,ctx:t,idx:e,level:n})}const i=t.matchNextSib,s=t.matchFirstChild;if(i){let r=t.transform;"object"==typeof i&&(t.transform=i);const s=o.nextElementSibling;null!==s&&(t.leaf=s,process(t,e+1,n)),t.transform=r}if(s){let e=t.transform;"object"==typeof s&&(t.transform=s);const r=o.firstElementChild;null!==r&&(t.leaf=r,process(t,0,n+1)),t.transform=e}t.matchFirstChild=s,t.matchNextSib=i}